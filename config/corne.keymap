
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include <dt-bindings/zmk/bt.h>

/ {
    
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp ESC   &kp Q      &kp W         &kp E        &kp R       &kp T                  &kp Z          &kp U       &kp I        &kp O      &kp P         &lt 5 LEFT_BRACKET
    &lt 2 TAB   &hm LGUI A &hm LALT S    &hm LSHIFT D &hm LCTRL F &lt 4 G                &lt 4 H        &hm RCTRL J &hm RSHIFT K &hm LALT L &hm RGUI SEMI &lt 3 SQT
 &kp CAPSLOCK   &kp Y      &kp X         &kp C        &kp V       &kp B                  &kp N          &kp M       &kp COMMA    &kp DOT    &kp FSLH      &kp MINUS
                               &trans  &kp DELETE  &kp ENTER            &lt 1 SPACE  &kp BACKSPACE     &trans
            >;
        };

        layer_MOVEMENT {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans              &trans  &kp PAUSE_BREAK   &kp INSERT  &kp PRINTSCREEN  &kp KP_NUMLOCK  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &kp LEFT         &kp DOWN       &kp UP        &kp RIGHT          &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP          &kp END          &trans  &trans
                         &trans  &trans  &trans              &trans           &trans       &trans
            >;
        };

        layer_FUNCTIONS {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                         &trans  &trans  &trans            &trans  &trans  &trans
            >;
        };

        layer_NUMBERS {
            bindings = <
&kp LS(COMMA)        &kp RBRC  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH            &trans  &trans  &trans  &trans  &trans  &trans
    &kp DOT         &kp AMPS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp RBKT            &trans  &trans  &trans  &trans  &trans  &trans
  &kp COMMA      &kp PERCENT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp RPAR            &trans  &trans  &trans  &trans  &trans  &trans
                                                  &trans  &kp NUMBER_0     &trans            &trans  &trans  &trans
            >;
        };

        layer_SYMBOLS {
            bindings = <
     &kp NON_US_HASH     &kp RBRC  &kp LS(GRAVE)   &kp NON_US_BSLH  &kp LS(NON_US_BSLH)  &kp SLASH               &kp RS(SLASH)  &kp RA(NUMBER_7)  &kp RA(NUMBER_0)     &kp LS(EQUAL)  &kp LS(NON_US_HASH)         &kp EQUAL
       &kp RA(MINUS)     &kp AMPS   &kp RA(RBKT)  &kp RA(NUMBER_8)     &kp RA(NUMBER_9)   &kp RBKT                   &kp RA(Q)  &kp LS(NUMBER_8)  &kp RS(NUMBER_9)       &kp RS(DOT)        &kp LS(COMMA)  &kp LS(NUMBER_2)
 &kp RA(NON_US_BSLH)  &kp PERCENT      &kp GRAVE  &kp RA(NUMBER_2)     &kp RA(NUMBER_3)   &kp RPAR            &kp RS(NUMBER_3)  &kp RS(NUMBER_4)         &kp RA(E)  &kp RS(NUMBER_1)        &kp LS(MINUS)  &kp RS(NUMBER_6)
                                                            &trans               &trans     &trans                      &trans            &trans            &trans
            >;
        };

        layer_BLUETOOTH {
            bindings = <
     &trans        &trans        &trans        &trans        &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans  &trans  &trans  &trans  &trans  &trans
     &trans        &trans        &trans        &trans        &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans
                                               &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };

    };
};
